            // if (responseData.message === 'Wrong UserName/Password') {
            //   this.showLoader = false;
            //   const alertHead = 'Failed!';
            //   const alertMessage =
            //     'Invalid login credentials, Wrong UserName/Password';
            //   this.common.presentAlert(alertHead, alertMessage);
            // } else {
            //   this.showLoader = false;
            //   this.common.navCtrl.navigateRoot('/user-dashborad');
            //   const loadMessage =
            //     '<strong>' +
            //     this.loginForm.value.userName +
            //     '</strong> successfully logged in.';
            //   const loadTime = 1000;
            //   this.common.presentLoading(loadMessage, loadTime);
            // }

                  <!-- <ion-item lines="none" style="--background: rgba(87, 15, 239, 0.1);
          border-radius: 30px;
  margin-bottom: 20px;">
        <ion-icon name="lock-closed-outline" slot="start" style="color: #570fef;"></ion-icon>
        <ion-input placeholder="OTP" type="password" [type]="showPassword ? 'password' : 'text'"
          formControlName="password"></ion-input>
        <ion-icon slot="end" [name]="showPassword ? 'eye' : 'eye-off'" (click)="showPassword = !showPassword">
        </ion-icon>
      </ion-item> -->

            <div style="display: flex; align-items: center; justify-content: space-between; padding: 0px 15px;">
        <div style="display: flex; align-items: center;">
          <ion-checkbox style="--border-color: #570fef;
              --border-color-checked: #570fef;
              --background-checked: #feab1a; --size: 1rem;" (ionChange)="onCheckRemember($event)"
            [checked]="isChecked"></ion-checkbox>
          <p style="color: #FF8E00; font-size: 15px;
              margin-left: 10px;">Remember Me</p>
        </div>
      </div>

              <div>
          <p style="color: #FF8E00; font-size: 15px;">Forgot Password?</p>
        </div>

              <ion-item lines="none" style="--background: rgba(87, 15, 239, 0.1);
        border-radius: 30px;
  margin-bottom: 20px;">
        <ion-icon name="mail-outline" slot="start" style="color: #570fef;"></ion-icon>
        <ion-input placeholder="Email ID" type="email" formControlName="userName" autocapitalize="true"></ion-input>
      </ion-item>

      <ion-item lines="none" style="--background: rgba(87, 15, 239, 0.1);
          border-radius: 30px;
  margin-bottom: 20px;">
        <ion-icon name="lock-closed-outline" slot="start" style="color: #570fef;"></ion-icon>
        <ion-input placeholder="Password" type="password" [type]="showPassword ? 'password' : 'text'"
          formControlName="password"></ion-input>
        <ion-icon slot="end" [name]="showPassword ? 'eye' : 'eye-off'" (click)="showPassword = !showPassword">
        </ion-icon>
      </ion-item>

        onCheckRemember(event: any) {
    if (this.loginForm.valid) {
      if (event?.detail?.checked === true) {
        const msg = "Your Email and Password is stored successfully.";
        const time = 2000;
        // this.token
        //   .setStorage('USER_DETAILS_CHECKED', this.loginForm.value)
        //   .catch((err) => {
        //     console.log('Error', err);
        //     console.log('User Email and Password securely stored in device');
        //   });
        this.common.presentToast(msg, time);
      }
    } else {
      const msg = "Please enter valid details and then click checkbox";
      const time = 2000;
      this.common.presentToast(msg, time);
      this.isChecked = false;
    }
  }

  fetchCheckedUserDetails() {
    // this.token.storage
    //   .get('USER_DETAILS_CHECKED')
    //   .then((val) => {
    //     console.log('Value', val);
    //     this.loginForm.value.userName = val?.userName;
    //     this.loginForm.value.password = val?.password;
    //     if (!val) {
    //       console.log('No User Details Stored');
    //     } else {
    //       const msg =
    //         'We found your stored Email and Password, would you like to continue with that';
    //       const time = 2000;
    //       this.common.presentToast(msg, time);
    //     }
    //   })
    //   .catch((err) => {
    //     console.log('Error:', err);
    //   });
  }
